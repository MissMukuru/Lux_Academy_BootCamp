# -*- coding: utf-8 -*-
"""Week4 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EOHQT07-7aOIUCekPFfu3_BNPgskScdM

We push each character of the string oonto the stack and compare them to the original strings character in reverse order, if tghey do not match, then we can asume that it is not a palindrome
"""

def checker(text):
  stack = []

  for char in text:
    stack.append(char)

    for char in text:
      if char != stack.pop():
        return false

    return true

"""List comprehemnssion is an easy wat to create a a list in python, using user defined functions"""

square_numbers = [x**2 for x in range(10)]
print(f"Square numbers are: {square_numbers}")

"""a compound data tyoe is a dat type that hold a collection of other data types like a strings,integers or floats"""

a_list = ['Abby', 'Ashley', 12, 3.24]
a_tuple = (10, 79, 3.14, 'Abby')
a_set = {'Abby', 34, 3.35}

print(a_list)
print(a_tuple)
print(a_set)

"""bigram function this function lets me iterate over the string extracting pairs of consqcutive characters"""

def bigram_char(text):
  bigrams = []

  for i in range(len(text)-1):
    bigrams.append(text[i:i+2])
    return bigrams


text = "IloveDataengineeringsomuch"
print(f"Bigrams in the text are", bigram_char(text))

def closest_key(dictionary, value):
  closest_key = None

  closest_index = float


  for key, value in dictionary.items():
    if value in value:
      index = value.index(value)

      if index < closest_index:
        closest_index = index
        closest_key = key

  return closest_key

dict = {
    'a': ['cats','dogs', 'rabbits'],
    'b' : ['shoes', 'socks', 'crocs'],
    'c' : ['bmw', 'Mercedes', 36]
}

print('closest_key', closest_key(dict, 'bmw'))

